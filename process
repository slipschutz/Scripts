#!/bin/bash

NO_ARGS=0;

if [ $# -eq "$NO_ARGS" ] || [ $# -eq 1 ]  # Script invoked with no command-line args?
then
  echo "Usage: ./`basename $0` -r run_number options(dbm)"
  exit 1          # Exit and explain usage, if no argument(s) given.
fi  
# Usage: scriptname -options
# Note: dash (-) necessary

doDDASdump=0;
runNum=0;
build=0;
mail=0;
timing="internalCFD"
gamma=0;
neutron=0;
while getopts ":dr:bmt:ng" Option
do
  case $Option in
    d     ) doDDASdump=1;;
    r     ) runNum=$OPTARG;;
    b     ) build=1;;
    m     ) mail=1;;
    n     ) neutron=1;;
    g     ) gamma=1;;
    t     ) timing=$OPTARG;;
    *     ) echo "Unimplemented option chosen.";;   # DEFAULT
  esac
done


shift $(($OPTIND - 1))

if [ ${doDDASdump} -eq 1 ] && [ `whoami` != "cedaq" ]; then
echo "Error:"
echo "ssh to daq machine as cedaq to run dumper"
exit;
fi

if [ ${neutron} -eq 0 ] && [ ${gamma} -eq 0 ] && [ ${build} -eq 1 ]; then
echo "Specify -g for gamma builder or -n for neutron builder"
exit;
fi

if [ ${neutron} -eq 1 ] && [ ${gamma} -eq 1 ] && [ ${build} -eq 1 ]; then
echo "Choose one"
exit;
fi


loc=`pwd`
path_evt='/mnt/daqtesting/lenda/experiment/run'${runNum}
path_root='/mnt/daqtesting/lenda/rootfiles/'

cd $path_evt
num=`ls | wc -l`

dumper_start=`date`;
if [ $doDDASdump -eq 1 ]; then 
    cd ~/neutron/DDAS/ddasdumper
    
    
    for ((i=0;i<$num;i++)); do
	
	if [ $i -lt 10 ]; then
	    ./ddasdumper --source=file://${path_evt}/run-0${runNum}-0${i}.evt --fileout=${path_root}/run-0${runNum}-0${i}.root
	fi
	
	if [ $i -ge 10 ]; then
	    ./ddasdumper --source=file://${path_evt}/run-0${runNum}-${i}.evt --fileout=${path_root}/run-${runNum}-${i}.root
	fi
    done
fi
dumper_end=`date`;    


##script is run from sam_analysis directory
cd $loc

##check to see if there is a run${runNum} directory
if [ ! -d "./run${runNum}" ]; then
    echo "No run directory found.  Making new run directory";
    mkdir "./run${runNum}";

else 
    echo "run directory found";
fi
cd ./run${runNum};
runDir=`pwd`;

cd ${runDir}

##check to see if all the files are in the run directory
allGood=1;

for ((i=0;i<$num;i++)); do 
    if [ $i -lt 10 ]; then
	file=run-0${runNum}-0${i}.root;
	if [ ! -f $file ];then
	    allGood=0;
	    break;
	fi
    fi
    
    if [ $i -ge 10 ]; then
	file=run-0${runNum}-${i}.root;
	if [ ! -f $file ];then
	    allGood=0;
	    break;
	fi
    fi

done
#############


if [ $allGood -eq 1 ]; then
    echo "All the root files have been linked"
elif [ $allGood -ne 1 ]; then 
    echo "Need to make links for the files"

    for ((i=0;i<$num;i++)); do
	if [ $i -lt 10 ]; then
	    file=run-0${runNum}-0${i}.root;
        elif [ $i -ge 10 ];then
	    file=run-${runNum}-${i}.root;
	    file2=run-0${runNum}-${i}.root;
	fi

	if [ -f /${path_root}/${file} ]  && [ ! -f /${loc}${file} ]; then

	    echo "This file needs a link: " $file
	    echo "Linking..."
	    ln -s /${path_root}/${file} /${runDir}/${file2}
	fi
    done
fi
##make links for builders
cd ${runDir};
if [ ! -f NeutronBuilder ]; then
    ln -s ../NeutronBuilder/NeutronBuilder
fi

if [ ! -f GammaBuilder ]; then
    ln -s ../GammaBuilder/GammaBuilder
fi

build_start=`date`;
if [ $build -eq 1 ]; then 

    if [ $gamma -eq 1 ]; then
	command="./GammaBuilder $runNum numFiles:$num timingMode:${timing}" 
    elif [ $neutron -eq 1 ]; then 
	command="./NeutronBuilder $runNum numFiles:$num timingMode:${timing}" 
    fi

    ${command};

fi
build_end=`date`;





dump_time=$((`date "+%s" -d "${dumper_end}"` - `date "+%s" -d "${dumper_start}"`)) ;
build_time=$((`date "+%s" -d "${build_end}"` - `date "+%s" -d "${build_start}"`)) ;

builder_date=`ls -ltrh EvtBuilder | awk '{print $6 " " $7}' | head -1`

echo;echo;
summary="Run ${runNum} was processed. Build command was ${command}\n";
summary="${summary}the options were:\n";
summary="${summary}doDDASdumper ${doDDASdump}\n"
summary="${summary}build ${build}\n"
summary="${summary}\nTime elapsed for the dumper was ${dump_time} seconds";
summary="${summary}\nTime elapsed for the builder was ${build_time} seconds\n";
summary="${summary}The time code on the builder was ${builder_date}";

if [ $mail -eq 1 ]; then
    subject="Run_${runNum}_on_`date "+%d_%m_%y_%H_%M_%S"`";
    echo -e $summary | mail -s ${subject} soam5515@yahoo.com
fi 

echo -e $summary;

